'use strict';



var text = '<p>привет! Лос-Анджелес Los Angeles, И Иван Иванович, Moscow 89505969834<a href="//texx.com/" class="test test111 _ " >как te.fds-st9_87@yuor35.com Иванов Павел Николаевич New-York New York ndjb</a> дела?+7 (4862) 99-23-34</p><p>e vtyz <a class="  fw2efjv sdf fsd" href="#test ggw 345" ><image src="test.png" ></a> дела?</p><p>я тебе <a id="fqfqf-453g3g" href="vkwjwvw.html?gfhjdgjdf=23&vdhj=2&--94" class="fk8943wfkwf" >-x-!!&&&!??</a> написал!</p>';
var re = /<a[^<>]+href\s*=\s*[\"\']?(.+?)[\"\'\s][^<>]*>(.+?)<\/a>/ig;//RegExp('<a href=[\"\']([^>\"\'])[\"\']>([^<])<\/a>', 'ig');

var re_href = /\s*href=\s*[\"\'](.+?)[\"\']/i;///\s*href=\s*[\"\']?(.+?)[\"\'\s]/i;
var re_inner = /\>(.+?)\<\/a>/i;
var re_img = /<(img|image|picture)[^<>]*>/ig;
var re_phone = /([\+\-\s\(\)0-9]){7,}/ig;///(\+7|8)([\+\-\s\(\)0-9]){7,}/ig;
var re_email = /([a-z0-9_\.\+-]+)@([a-z0-9_\.-]+)\.([a-z\.]{2,6})/ig;
var re_ofname_ru = /([А-ЯЁ][а-яё]+[\-\s]?){1,}/g;// /([A-ZА-ЯЁ]{1}[a-zа-яё\-]{1,}){1,}/g;
var re_ofname_ru2 = /([А-ЯA-Z]|[А-ЯA-Z][\x27а-яa-z]{1,}|[А-ЯA-Z][\x27а-яa-z]{1,}\-([А-ЯA-Z][\x27а-яa-z]{1,}|(оглы)|(кызы)))\040[А-ЯA-Z][\x27а-яa-z]{1,}(\040[А-ЯA-Z][\x27а-яa-z]{1,})?/g;
var re_ofname_en = /([A-Z][a-z]+[\-\s]?){1,}/g;
var re_words_2 = /[^\<\>\s]*\s[^\<\>\s]*/ig;

console.log('----------');
console.log('----------');
console.log('----------');

var res = text.match(re_words_2);
for(var i in res) {
	console.dir(res[i].trim());
}

/*
var res = text.match(re);
for(var i in res) {
	
	console.dir(res[i]);
	
	var href = res[i].match(re_href);
	console.log(href[1]);
	
	var inner = res[i].match(re_inner);
	console.log(inner[1]);
	
	var is_img = re_img.test(res[i]);
	console.log(is_img);
	
	console.log('----------');
	
}
*/

/*


4) IP-v4 адреса
/\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\b/
5) IP-v6 адреса
(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))



8) Сортировка ключевых слов по кол-ву упоминаний в тексте
^[^\s]*$        matches exactly 1-word keyword
^[^\s]*\s[^\s]*$    matches exactly 2-word keyword
^[^\s]*\s[^\s]*     matches keywords of at least 2 words (2 and more)
^([^\s]*\s){2}[^\s]*$    matches exactly 3-word keyword
^([^\s]*\s){4}[^\s]*$    matches 5-words-and-more keywords (longtail)



9) Поиск PHP строки
\?php[ \t]eval\(base64_decode\(\'(([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?){1}\'\)\)\;



11) Пробелы до и после
^[ \s]+|[ \s]+$


18) Номер кредитки
^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$



<meta name=['"]description['"] content=['"]([^<>]*?)['"]>



var re=/[а-яёЁ]/i, str=el.innerHTML;
res=(re.test(str))?'Есть русские буквы':'Нет русских букв';


1. Часть ЧПУ (человекопонятный URL)
По сути, слово с дефисами.
Паттерн: /^[a-z0-9-]+$/

2. Юзернейм
Буквы, цифры, дефисы и подчёркивания, от 3 до 16 символов.
Паттерн: /^[a-z0-9_-]{3,16}$/

3. Пароль
То же, что и юзернейм, только от 6 до 18.
Паттерн: /^[a-z0-9_-]{6,18}$/

4. Шестнадцатиричный цвет
Символ # (необязательно), затем слово, состоящее из букв от a до f или цифр, длиной 3 или 6.
Паттерн: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/

5. XML тэг
За открывающей скобкой < должно стоять слово из букв — имя элемента, затем могут быть атрибуты — любые символы, кроме закрывающей скобки >. Далее — любой текст (содержимое) и закрывающий тэг, т.е. <имя />, или как минимум один пробел, слэш и закрывающаю скобка (самозакрывающийся тэг).
Паттерн: /^<([a-z]+)([^>]+)*(?:>(.*)<\/\1>|\s+\/>)$/

6. Email
Общий вид — логин@поддомен.домен. Логин, как и поддомен — слова из букв, цифр, подчёркиваний, дефисов и точек. А домен (имеется в виду 1го уровня) — это от 2 до 6 букв и точек.
Паттерн: /^([a-z0-9_\.-]+)@([a-z0-9_\.-]+)\.([a-z\.]{2,6})$/

7. URL
Первым делом — необязательный протокол (http:// или https://), затем последовательность букв, цифр, дефисов, подчёркиваний и точек (домены уровня > 1), потом домен нулевого уровня (от 2 до 6 букв и точек) и, наконец, файловая структура — набор слов из букв, цифр, дефисов, подчёркиваний и точек со слэшем в конце. Всё это может завершаться опять-таки слэшем.
Паттерн: /^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$/
//(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w\.-]*)*\/?


8. IP адрес
4 группы цифр (от 1 до 3 цифр в каждой) разделены точками. Если группа состоит из 3 символов, то первый из них — 1 или 2; если 1, то остальные от 0 до 9, а если 2 — то второй от 0 до 5; если второй символ от 0 до 4, то третий — от 0 до 9, а если второй 5 — то третий от 0 до 5. Если же группа состоит из 2 символов, то первый — от 1 до 9, второй — от 0 до 9. В случае односимвольной группы этим символом может быть цифра от 1 до 9.
Паттерн: /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/

*/